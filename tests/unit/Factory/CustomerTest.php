<?php
/**
 * Created by PhpStorm.
 * User: Forest
 * Date: 18-Nov-17
 * Time: 14:17
 */

namespace Forestsoft\Billomat\Factory;

use PHPUnit\Framework\TestCase;

class CustomerTest extends TestCase
{
    const EXPECTED_API = "mySecretAPIKey";

    public static $config =  [
        "apiKey" => "mySecretAPIKey",
        "billomatId" => "forestsoft",
        "page" => 1,
        "perPage" => 10,
        "language" => "de_DE",
        "order" => "firstname:asc"
    ];

    /**
     * @var Customer
     */
    private $_object;

    public function testOnstanceOfIFactory()
    {
        $this->assertInstanceOf('Forestsoft\Billomat\Factory\IFactory', $this->_object);
    }

    public function testCreate()
    {
        $customer = $this->_object->create();
        $this->assertInstanceOf('Forestsoft\Billomat\Customer\ICustomer', $customer);

        return $customer;
    }

    /**
     * @depends testCreate
     * @param \Forestsoft\Billomat\Customer\Customer $customer
     */
    public function testHasApiKey($customer)
    {
        $this->assertAttributeEquals(CustomerTest::$config['apiKey'], '_apikey', $customer);
    }

    /**
     * @depends testCreate
     * @param \Forestsoft\Billomat\Customer\Customer $customer
     */
    public function testBillomatId($customer)
    {
        $this->assertAttributeEquals(CustomerTest::$config['billomatId'], '_billomatId', $customer);
    }

    /**
     * @depends testCreate
     * @param \Forestsoft\Billomat\Customer\Customer $customer
     */
    public function testPage($customer)
    {
        $this->assertAttributeEquals(CustomerTest::$config['page'], '_page', $customer);
    }

    /**
     * @depends testCreate
     * @param \Forestsoft\Billomat\Customer\Customer $customer
     */
    public function testperPage($customer)
    {
        $this->assertAttributeEquals(CustomerTest::$config['perPage'], '_perPage', $customer);
    }


    /**
     * @depends testCreate
     * @param \Forestsoft\Billomat\Customer\Customer $customer
     */
    public function testLang($customer)
    {
        $this->assertAttributeEquals(CustomerTest::$config['language'], '_language', $customer);
    }

    /**
     * @depends testCreate
     * @param \Forestsoft\Billomat\Customer\Customer $customer
     */
    public function testOrder($customer)
    {
        $this->assertAttributeEquals(CustomerTest::$config['order'], '_order', $customer);
    }


    public function testGetInstance()
    {
        $actual = Customer::getInstance();

        $this->assertInstanceOf(get_class($this->_object), $actual);
    }

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->_object = new Customer();
        $this->_object->setConfig(CustomerTest::$config);
    }
}
