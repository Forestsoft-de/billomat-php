<?php
/**
 * ForestSoft Billomat PHP
 * @link https://github.com/Forestsoft-de/billomat-php
 * @copyright Copyright (c) 2017. ForestSoft Sebastian FÃ¶rster
 * @license Apache 2.0 https://github.com/Forestsoft-de/billomat-php/blob/master/LICENSE
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



namespace Forestsoft\Billomat;

use PHPUnit\Framework\TestCase;

class ResourceTest extends BaseTest
{
    /**
     * @var \Forestsoft\Billomat\Resource
     */
    private $_object;

    public function testImplementsResource()
    {
        $this->assertInstanceOf('Forestsoft\Billomat\IResource', $this->_object);
    }

    public function testHasAClientFactory()
    {
        $this->assertInstanceOf('Forestsoft\Billomat\Factory\IClient', $this->_object->getClientFactory());
    }

    public function testDefaultOptions()
    {
        $method = $this->getMethod($this->_object, "getOptions");

        $expected = [
            "billomat" => [
                "billomatId" => null,
                "apiKey" => null,
            ]
        ];
        $this->assertEquals($expected, $method->invoke($this->_object));
    }

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->_object = $this->getMockBuilder('Forestsoft\Billomat\Resource')->getMockForAbstractClass();
    }
}
