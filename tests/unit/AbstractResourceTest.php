<?php
/**
 * Created by PhpStorm.
 * User: sebastian.foerster
 * Date: 01.12.2017
 * Time: 16:47
 */

namespace Forestsoft\Billomat;


use Forestsoft\Billomat\Mapper\Mapper;

abstract class AbstractResourceTest extends BaseTest
{
    /**
     * @var \Forestsoft\Billomat\Factory\ICustomer
     */
    protected $_resourceFactory;

    /**
     * @var IClient
     */
    protected $clientFactory;

    /**
     * @var \Forestsoft\Billomat\Client\IClient
     */
    protected $_client;

    protected $_expectedOptions =   [
        "billomat" => [
            "billomatId" => "myBillomatId",
            'apiKey' => null,
        ]
    ];


    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->_object->setBillomatId("myBillomatId");

        $this->_client = $this->getMockBuilder('Forestsoft\Billomat\Client\IClient')->getMock();
        $this->clientFactory = $this->getMockBuilder('Forestsoft\Billomat\Factory\IClient')->getMock();
        $this->_resourceFactory = $this->getMockBuilder('Forestsoft\Billomat\Factory\ICustomer')->getMock();

        $this->_object->setClientFactory($this->clientFactory);

        \Forestsoft\Billomat\Factory\Customer::setFactoryInstance($this->_resourceFactory);

    }


    public function assertCreateWorks($resource, $data, $expectedRequest, $response)
    {
        $mapper = new Mapper();
        $mapper->map($this->_object, new \ArrayObject($data));

        $this->_client->expects($this->once())->method("request")
            ->with($expectedRequest)
            ->willReturn($response);

        $this->clientFactory->expects($this->once())->method("create")->with( $resource . "/create", $this->_expectedOptions)->willReturn($this->_client);

        $this->_object->setClientFactory($this->clientFactory);

        $this->_object->create();
    }
}